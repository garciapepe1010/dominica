DROP TABLE IF EXISTS PARAMETERS
;
DROP TABLE IF EXISTS COMPONENT_COMPONENT
;
DROP TABLE IF EXISTS COMPONENT_DATA_ARRAY
;
DROP TABLE IF EXISTS COMPONENT_DATA
;
DROP TABLE IF EXISTS COMPONENT
;
DROP TABLE IF EXISTS PAGE_ALIAS
;
DROP TABLE IF EXISTS TEMPLATE
;
DROP TABLE IF EXISTS USER_BY_SECTION
;
DROP TABLE IF EXISTS PAGE_META
;
DROP TABLE IF EXISTS PAGE
;
DROP TABLE IF EXISTS SECTION
;
DROP TABLE IF EXISTS USER
;
DROP TABLE IF EXISTS DOMAIN
;

CREATE TABLE PARAMETERS
(
	TABLE_KEY VARCHAR(50) NOT NULL,
	DOMAIN NUMERIC(5) NOT NULL,
	DATA_DATE DATETIME,
	DATA_NUMBER NUMERIC(10,2),
	DATA_VARCHAR VARCHAR(255),
	PRIMARY KEY (TABLE_KEY, DOMAIN),
	KEY (DOMAIN)
) 
;


CREATE TABLE COMPONENT_COMPONENT
(
	COMPONENT_PARENT NUMERIC(10) NOT NULL,
	COMPONENT_CHILD NUMERIC(10) NOT NULL,
	TABLE_ORDER NUMERIC(3) NOT NULL,
	PRIMARY KEY (COMPONENT_PARENT, COMPONENT_CHILD, TABLE_ORDER)
) 
;


CREATE TABLE COMPONENT_DATA_ARRAY
(
	TABLE_KEY NUMERIC(9) NOT NULL,
	COMPONENT_DATA NUMERIC(9),
	DATA_TYPE VARCHAR(10),
	DATA_DATA DATETIME,
	DATA_NUMBER NUMERIC(10,2),
	DATA_VARCHAR VARCHAR(255),
	DATA_TEXT TEXT,
	DATA_URL VARCHAR(255),
	PRIMARY KEY (TABLE_KEY),
	KEY (COMPONENT_DATA)
) 
;


CREATE TABLE COMPONENT_DATA
(
	TABLE_KEY NUMERIC(9) NOT NULL,
	COMPONENT NUMERIC(9) NOT NULL,
	DATA_NAME VARCHAR(50) NOT NULL,
	DATA_TYPE VARCHAR(10),
	DATA_DATE DATETIME,
	DATA_NUMBER NUMERIC(10,2),
	DATA_VARCHAR VARCHAR(255),
	DATA_TEXT TEXT,
	DATA_URL VARCHAR(255),
	DATA_ARRAY NUMERIC(1),
	PRIMARY KEY (TABLE_KEY),
	KEY (COMPONENT)
) 
;


CREATE TABLE COMPONENT
(
	TABLE_KEY NUMERIC(9) NOT NULL,
	NAME VARCHAR(125) NOT NULL,
	PRIMARY KEY (TABLE_KEY)
) 
;


CREATE TABLE PAGE_ALIAS
(
	TABLE_KEY NUMERIC(9) NOT NULL,
	PAGE NUMERIC(10) NOT NULL,
	URL VARCHAR(255) NOT NULL,
	PRIMARY KEY (TABLE_KEY),
	KEY (PAGE)
) 
;


CREATE TABLE TEMPLATE
(
	TABLE_KEY NUMERIC(10) NOT NULL,
	DOMAIN NUMERIC(5) NOT NULL,
	NAME VARCHAR(125) NOT NULL,
	PRIMARY KEY (TABLE_KEY)
) 
;


CREATE TABLE USER_BY_SECTION
(
	USER VARCHAR(50) NOT NULL,
	SECTION NUMERIC(5) NOT NULL,
	PRIMARY KEY (USER, SECTION),
	KEY (USER)
) 
;


CREATE TABLE PAGE_META
(
	TABLE_KEY NUMERIC(9) NOT NULL,
	PAGE NUMERIC(10) NOT NULL,
	META VARCHAR(255) NOT NULL,
	PRIMARY KEY (TABLE_KEY),
	KEY (PAGE)
) 
;


CREATE TABLE PAGE
(
	TABLE_KEY NUMERIC(10) NOT NULL,
	SECTION NUMERIC(5) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	VERSION NUMERIC(9),
	TEMPLATE NUMERIC(10),
	URL VARCHAR(250),
	URL_PATTERN VARCHAR(250),
	ACTIVE NUMERIC(1) NOT NULL,
	IS_DEFAULT NUMERIC(1) NOT NULL,
	BREADCRUMB VARCHAR(255),
	PRIMARY KEY (TABLE_KEY),
	KEY (TEMPLATE)
) 
;


CREATE TABLE SECTION
(
	TABLE_KEY NUMERIC(5) NOT NULL,
	DOMAIN NUMERIC(5) NOT NULL,
	NAME VARCHAR(75) NOT NULL,
	URL VARCHAR(50) NOT NULL,
	IS_PUBLIC NUMERIC(1),
	PRIMARY KEY (TABLE_KEY),
	KEY (DOMAIN)
) 
;


CREATE TABLE USER
(
	TABLE_KEY VARCHAR(50) NOT NULL,
	DOMAIN NUMERIC(5) NOT NULL,
	USER_NAME VARCHAR(50),
	USER_PASSWORD VARCHAR(50) NOT NULL,
	DATE_START DATE NOT NULL,
	DATE_END DATE,
	PRIMARY KEY (TABLE_KEY),
	KEY (DOMAIN)
) 
;


CREATE TABLE DOMAIN
(
	TABLE_KEY NUMERIC(5) NOT NULL,
	NAME VARCHAR(150) NOT NULL,
	DATE_START DATE NOT NULL,
	DATE_END DATE,
	PRIMARY KEY (TABLE_KEY)
) 
;





ALTER TABLE PARAMETERS ADD CONSTRAINT FK_PARAMETERS_DOMAIN 
	FOREIGN KEY (DOMAIN) REFERENCES DOMAIN (TABLE_KEY)
;

ALTER TABLE COMPONENT_DATA_ARRAY ADD CONSTRAINT FK_DATA_COMPONENT_ARRAY_COMPONENT_DATA 
	FOREIGN KEY (COMPONENT_DATA) REFERENCES COMPONENT_DATA (TABLE_KEY)
;

ALTER TABLE COMPONENT_DATA ADD CONSTRAINT FK_COMPONENT_DATA_COMPONENT 
	FOREIGN KEY (COMPONENT) REFERENCES COMPONENT (TABLE_KEY)
;

ALTER TABLE PAGE_ALIAS ADD CONSTRAINT FK_PAGE_ALIAS_PAGE 
	FOREIGN KEY (PAGE) REFERENCES PAGE (TABLE_KEY)
	ON DELETE CASCADE
;

ALTER TABLE USER_BY_SECTION ADD CONSTRAINT FK_USER_BY_SECTION_USER 
	FOREIGN KEY (USER) REFERENCES USER (TABLE_KEY)
;

ALTER TABLE PAGE_META ADD CONSTRAINT FK_PAGE_META_PAGE 
	FOREIGN KEY (PAGE) REFERENCES PAGE (TABLE_KEY)
	ON DELETE CASCADE
;

ALTER TABLE PAGE ADD CONSTRAINT FK_PAGE_TEMPLATE 
	FOREIGN KEY (TEMPLATE) REFERENCES TEMPLATE (TABLE_KEY)
;

ALTER TABLE SECTION ADD CONSTRAINT FK_SECTION_DOMAIN 
	FOREIGN KEY (DOMAIN) REFERENCES DOMAIN (TABLE_KEY)
;

ALTER TABLE USER ADD CONSTRAINT FK_USER_DOMAIN 
	FOREIGN KEY (DOMAIN) REFERENCES DOMAIN (TABLE_KEY)
;
